name: Validation & Testing

on:
  push:
  pull_request:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  hacs:
    name: HACS Validation
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v3"
      - name: HACS validation
        uses: "hacs/action@main"
        with:
          category: "integration"
          ignore: "brands"

  hassfest:
    name: Hassfest Validation
    runs-on: "ubuntu-latest"
    steps:
      - uses: "actions/checkout@v3"
      - uses: home-assistant/actions/hassfest@master

  validate:
    runs-on: ubuntu-latest
    name: Lint Validation
    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pylint ruff mypy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements.tests.txt ]; then pip install -r requirements.tests.txt; fi

    - name: Lint with pylint
      continue-on-error: true
      run: |
        pylint custom_components/

    - name: Check code with ruff
      continue-on-error: true
      run: |
        ruff check custom_components/

    - name: Type checking with mypy
      continue-on-error: true
      run: |
        mypy custom_components/

  test:
    name: Test with Python 3.13
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
          cache: pip

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pytest-homeassistant-custom-component
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements.tests.txt ]; then pip install -r requirements.tests.txt; fi

      - name: Test with pytest
        continue-on-error: true
        run: |
          pytest --cov=custom_components/onemeter --cov-branch --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}